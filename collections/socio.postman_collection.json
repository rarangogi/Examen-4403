{
	"info": {
		"_postman_id": "0f692dfb-ac13-48e3-8f9d-17e5ae8cb504",
		"name": "socio",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23048305"
	},
	"item": [
		{
			"name": "Crear una socio válida",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"socio_id\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Rosario\",\r\n    \"pais\": \"Argentina\",\r\n    \"numeroDeHabitantes\": 948312\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/members",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear una socio inválida",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El pais de la socio ingresada no se encuentra dentro de los paises permitidos\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Lima\",\r\n    \"pais\": \"Perú\",\r\n    \"numeroDeHabitantes\": 9674755\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/members",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener todas las socioes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of socioes > ' + 0, function () {\r",
							"   var data = pm.response.json()\r",
							"   pm.expect(data.length).to.greaterThan(0)\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/members",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener una socio por id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/members/b52b2a44-dd72-4075-8424-f473a3d40dc6",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members",
						"b52b2a44-dd72-4075-8424-f473a3d40dc6"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener una socio por id que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"No se encontró la socio con el ID dado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/members/3ec2cd21-fe10-403f-a4e3-a3987f3622e9",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members",
						"3ec2cd21-fe10-403f-a4e3-a3987f3622e9"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar una socio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Córdoba\",\r\n    \"pais\": \"Argentina\",\r\n    \"numeroDeHabitantes\": 1317298\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/members/3ec2cd21-fe10-403f-a6e2-a3987f3622e9",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members",
						"3ec2cd21-fe10-403f-a6e2-a3987f3622e9"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar una socio con un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"No se encontró la socio con el ID dado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Córdoba\",\r\n    \"pais\": \"Argentina\",\r\n    \"numeroDeHabitantes\": 1111111\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/members/3ec2cd21-fe10-403f-a4e3-a3987f3622e9",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members",
						"3ec2cd21-fe10-403f-a4e3-a3987f3622e9"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar una socio por su ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/members/3ec2cd21-fe10-403f-a6e2-a3987f3622e9",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members",
						"3ec2cd21-fe10-403f-a6e2-a3987f3622e9"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar una socio con un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"No se encontró la socio con el ID dado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/members/3ec2cd21-fe10-403f-a4e3-a3987f3622e9",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members",
						"3ec2cd21-fe10-403f-a4e3-a3987f3622e9"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "localhost:3000/api/v1",
			"type": "string"
		}
	]
}